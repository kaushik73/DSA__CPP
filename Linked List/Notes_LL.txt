struct node *next; // it is a pointer points to a data type of struct node.

node * newnode = new node(); -> creates a new node.

REVERSE OF A SINGLY LL :
    struct node *current = head;
    struct node *next = NULL;
    struct node *prev = NULL;
    while (current != NULL)
    {
        next = current->next; //next ↑
        current->next = prev; //Main ↑
        prev = current;       //prev ↑
        current = next;       //current ↑
    }NMPC
    head = prev;



LinkedList middle element = 2 pointer one is fast = head->next and another slow = head; OR find length and 
divide by 2.


Recusive REVERSE : 
voide recur_reverse(Node *&head , Node*curr , Node*prev){

if(cur==NULL){
    head = prev;
    return;
}
    Node * forward = curr->next;
    recur_reverse(head, for, curr);
    curr->next = prev;
}

Node * REVERSE(Node *head){
    Node * curr = head;
    Node * prev = NULL;
    recur_reverse(head, curr,prev);
    return head;
}

